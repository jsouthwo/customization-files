# /* vim: set filetype=sh : */ ~

######################################################################
# Commands placed in here are executed for all shells.
# Login shells source .bashrc from .bash_profile.
######################################################################

# Source .bash_aliases if it exists
[ -f $HOME/.bash_aliases ] && . $HOME/.bash_aliases
export CXXDIR=${HOME}/cos121s1321/Extension_Files/cxxtest
export PATH=${PATH}:${HOME}/cos121s1321/Extension_Files/cxxtest
export CPLUS_INCLUDE_PATH=${CXXDIR}:
export SVN_EDITOR=/usr/bin/vim
export EDITOR=/usr/bin/vim


source ~/.git-completion.bash
source ~/.git-flow-completion.bash
source /etc/bash_completion

# Some aliases
alias ls='ls -GFh --color=auto'
alias la='ls -A'
alias ll='ls -l'
alias l=ls

alias mygrep='grep -nrI --color'

alias h=history
alias c=cd
alias ..='cd ..'
alias ...='cd ../..'
alias ....='cd ../../..'
alias .....='cd ../../../..'

alias wd='workon dream'
alias d='deactivate'


alias v=vim
alias vless='vim -u /usr/share/vim/vim74/macros/less.vim'
alias less='less -R'

git config --global alias.co checkout
git config --global alias.br branch
git config --global alias.ci commit
git config --global alias.st status
git config --global alias.unstage 'reset HEAD --'
git config --global alias.last 'log -1 HEAD'
git config --global alias.delete 'push origin --delete'
git config --global core.editor 'vim'

function lalala(){
    du -sh * | sort -rn | head -n 20
}

function lala(){
    du -a . | sort -rn | head -n 20
}

function myMac(){
    ssh Justin@justin-southworth.campus.tayloru.edu
}

function cd(){
## Set 'cd' to automatically run 'ls'
    ARGUMENTS=$*
    if [ -z $ARGUMENTS ]; then
        builtin cd ~
        ls -GFh
        return
    else
        builtin cd "$*"
    fi
    RESULT=$?
    if [ $RESULT -eq 0 ]; then
        export PS1='\n\[$RESET$CYAN\][\d > \t] \[$RED$BOLD\][\w] \[$BOLD$GREEN\]$(git_prompt) \[$RESET$MAGENTA\][command: \#] \[$YELLOW\][jobs: \j] \[$BLUE\][\u@\h]
\[$RESET\]\[$GREEN\]\[$BLINK\]::: \[$RESET\]'
        ls -GFh
    else
        export PS1='\n\[$RESET$CYAN\][\d > \t] \[$RED$BOLD\][\w] \[$BOLD$GREEN\]$(git_prompt) \[$RESET$MAGENTA\][command: \#] \[$YELLOW\][jobs: \j] \[$BLUE\][\u@\h]
\[$RESET\]\[$RED$BLINK\]::: \[$RESET\]'
    fi
}

git_prompt () {
## Outputs git branch if in a repo
    if ! git rev-parse --git-dir > /dev/null 2>&1; then
        return 0
    fi

    git_branch=$(git branch 2>/dev/null| sed -n '/^\*/s/^\* //p')
    echo "[$git_branch]"
}

DEFAULT=$(tput setaf 9)
BLACK=$(tput setaf 0)
RED=$(tput setaf 1)
GREEN=$(tput setaf 2)
YELLOW=$(tput setaf 3)
BLUE=$(tput setaf 4)
MAGENTA=$(tput setaf 5)
CYAN=$(tput setaf 6)
WHITE=$(tput setaf 7)

# DIM doesn't seem to work. Just reset.
DIM=$(tput dim)
BOLD=$(tput bold)
RESET=$(tput sgr0)
START_UNDER=$(tput smul)
END_UNDER=$(tput rmul)
# reverses fg and bg
REV=$(tput rev)
BLINK=$(tput blink)

# TODO: Fix the hackiness. Also, only make jobs show up if > 1?
export PS1='\n\[$RESET$CYAN\][\d > \t] \[$RED$BOLD\][\w] \[$BOLD$GREEN\]$(git_prompt) \[$RESET$MAGENTA\][command: \#] \[$YELLOW\][jobs: \j] \[$BLUE\][\u@\h]
\[$RESET\]\[$(es=$?;if [ $es -eq 0 ]; then echo $GREEN; else echo $RED;fi)\]\[$BOLD$BLINK\]::: \[$RESET\]'

###### HISTORY ######
# Append to history
shopt -s histappend
# Force commands to one line
shopt -s cmdhist
HISTFILESIZE=1000000000
HISTSIZE=1000000000
# HISTCONTROL=ignoreboth
HISTCONTROL=ignoredups:erasedups
HISTIGNORE='bg:fg:history'
HISTTIMEFORMAT='%F %T '

# check the window size after each command and, if necessary,
# update the values of LINES and COLUMNS.
shopt -s checkwinsize

# make less more friendly for non-text input files, see lesspipe(1)
[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"

force_color_prompt=yes

# Force 256 color terminal
export TERM=xterm-256color

# Find rm
# find . -name "*.orig" -exec rm {} \;
