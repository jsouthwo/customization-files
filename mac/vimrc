" Put this here for easymotion not updating <leader>
let mapleader=","
nnoremap \ ,

""""""""""""""""""""""""""""""""""""""""""""
" PLUGINS
""""""""""""""""""""""""""""""""""""""""""""
if filereadable($HOME."/.vim/rc/plugins.vim")
    source ${HOME}/.vim/rc/plugins.vim
endif

""""""""""""""""""""""""""""""""""""""""""""
" FUNCTIONS
""""""""""""""""""""""""""""""""""""""""""""
if filereadable($HOME."/.vim/rc/functions.vim")
    source ${HOME}/.vim/rc/functions.vim
endif

""""""""""""""""""""""""""""""""""""""""""""
" MAPS
""""""""""""""""""""""""""""""""""""""""""""
if filereadable($HOME."/.vim/rc/maps.vim")
    source ${HOME}/.vim/rc/maps.vim
endif

" Set 256 color output
" set t_Co=256
set t_Co=16 " It's what solarized wants.

" allow backspacing over everything in insert mode
set backspace=indent,eol,start

set ruler		" show the cursor position all the time
set showcmd		" display incomplete commands
set incsearch		" do incremental searching

" In many terminal emulators the mouse works just fine, thus enable it.
if has('mouse')
  set mouse=a
endif

" Switch syntax highlighting on, when the terminal has colors
" Also switch on highlighting the last used search pattern.
if &t_Co > 2 || has("gui_running")
  syntax on
  set hlsearch
endif

" wildmenu
set wildmenu
set wildignore=*.sw*,*.so,*.o,*.kate-swp,*.lo,*.pyc
set wildmode=list:longest,full
set smarttab

" auto adds g(lobal) to substitutions
set gdefault

" colorscheme Monokai-chris
" colorscheme zenburn
colorscheme solarized
set background=dark
let g:solarized_termtrans = 0           "Transparent

set softtabstop=4
set shiftwidth=4
set expandtab
set number
set hidden

" Dangerous...
" set autowrite
set autochdir
" autocmd BufEnter * silent! lcd %:p:h " Does same as sutochdir.

let python_highlight_all = 1

" list breaks this, but oh well.
set linebreak
"Invisible character colors
" eol, extends, preceded
"highlight NonText guifg=red ctermfg=red
" nbsp, tab, trail
highlight SpecialKey guifg=red ctermfg=red

highlight ExtraWhitespace ctermbg=red guibg=red ctermfg=white guifg=white

" Amazing
fun! <SID>StripTrailingWhitespaces()
    let l = line(".")
    let c = col(".")
    %s/\s\+$//e
    call cursor(l, c)
endfun

" colors for autocomplete
highlight Pmenu    ctermbg=white ctermfg=black guibg=white guifg=black
highlight PmenuSel ctermfg=white ctermbg=blue  guifg=white guibg=blue

" Height of command line. 2 Stops some annoying 'press ENTER...' stuffs.
set cmdheight=2

" ------------------------------------------
" Stuff for "Learn Vim the Hard Way Tuturial
" ------------------------------------------

" Show line numbers relative to current line (Doesn't screw up G)
set relativenumber
set number
" ALL the numbering options!
function! NumberToggle()
    if(&relativenumber == 1 && &number == 1)
        set number
        set norelativenumber
    elseif(&relativenumber == 0 && &number == 1)
        set nonumber
        set relativenumber
    else
        set number
        set relativenumber
    endif
endfunc

" Wrap text when needed.
set wrap

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" LIGHTSYS "
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
set history=1000

set list
set listchars=trail:×,nbsp:⋅,tab:>-,extends:»,precedes:«,eol:¬
" Tabs
" http://vim.wikia.com/wiki/Xterm256_color_names_for_console_Vim
highlight SpecialKey guifg=#5f5f5f ctermfg=59
" Non text = extends, precedes, & eol
highlight NonText guifg=#5f5f5f ctermfg=59
highlight Special term=bold ctermfg=5 guifg=SlateBlue
" Special are escaped chars. Ex. \" This is from peachpuff"
highlight Special term=bold ctermfg=5 guifg=SlateBlue
" highlight Special term=bold ctermfg=red guifg=red
highlight Number ctermfg=125 guifg=#af005f

set completeopt=longest,menuone

set hidden

" Stop Vim's autowrapping feature
set textwidth=0
set wrapmargin=0

" Convenient command to see the difference between the current buffer and the
" file it was loaded from, thus the changes you made.
" Only define it when not defined already.
if !exists(":DiffOrig")
    command DiffOrig vert new | set bt=nofile | r # | 0d_ | diffthis
                \ | wincmd p | diffthis
endif

" left and right motion wraps lines (see help)
" Only doesn't include ~
set whichwrap=b,s,h,l,<,>,[,]

""""""""""""""""""""""""""""""""""""""""""""
" OS
""""""""""""""""""""""""""""""""""""""""""""
if filereadable($HOME."/.vim/rc/os.vim")
    source ${HOME}/.vim/rc/os.vim
endif

""""""""""""""""""""""""""""""""""""""""""""
" AUTOS
""""""""""""""""""""""""""""""""""""""""""""
if filereadable($HOME."/.vim/rc/autos.vim")
    source ${HOME}/.vim/rc/autos.vim
endif

""""""""""""""""""""""""""""""""""""""""""""
" Testing
""""""""""""""""""""""""""""""""""""""""""""
if filereadable($HOME."/.vim/rc/testing.vim")
    source ${HOME}/.vim/rc/testing.vim
endif

" http://archive09.linux.com/articles/54159
set viminfo='100,f0

" Powerline fonts
"set guifont=Inconsolata\ for\ Powerline:h15
"let g:Powerline_symbols = 'fancy'

