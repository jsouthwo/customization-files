# /* vim: set filetype=sh : */ ~

######################################################################
# Commands placed in here are executed for all shells.
# Login shells source .bashrc from .bash_profile.
######################################################################

export SVN_EDITOR=/usr/bin/vim
export EDITOR=/usr/bin/vim


[ -f $HOME/.bash_aliases ] && . $HOME/.bash_aliases
[ -f $HOME/.git-completion.bash ] && . ~/.git-completion.bash
[ -f $HOME/.git-flow-completion.bash ] && . ~/.git-flow-completion.bash
[ -f /etc/bash_completion ] && . /etc/bash_completion

###### HISTORY ######
# Append to history
shopt -s histappend
# Force commands to one line
shopt -s cmdhist
HISTFILESIZE=1000000000
HISTSIZE=1000000000
HISTCONTROL=ignoredups:erasedups
HISTIGNORE='bg:fg:history'
HISTTIMEFORMAT='%F %T '

# Some aliases
alias ls='ls -GFh --color=auto --group-directories-first'
alias l=ls
alias la='ls -A'
alias ll='ls -l'

alias mygrep='grep -nrIT --color'

alias vi=vim
alias v=vim
alias vless='vim -u /usr/share/vim/vim74/macros/less.vim'
alias less='less -R'
alias hist=history
alias h=history

alias c="cd"
alias c..='cd ..'
alias cd..='cd ..'
alias ..='cd ..'
alias .1='cd ..'
alias ..1='cd ..'
alias ...='cd ../..'
alias .2='cd ../..'
alias ..2='cd ../..'
alias ....='cd ../../..'
alias .3='cd ../../..'
alias ..3='cd ../../..'
alias .....='cd ../../../..'
alias .4='cd ../../../..'
alias ..4='cd ../../../..'

alias gti='git'

alias jobs='jobs -l'

alias wd='workon dream'
alias d='deactivate'

alias s='cd ~/Documents/472_cos/tinyhands/'

function lalala(){
    du -sh * .* | sort -rn | head -n 20
}

function lala(){
    du -ah . | sort -rn | head -n 20
}

alias path='echo $PATH | tr -s ":" "\n"'

alias rm='rm -I'

function myMac(){
    ssh Justin@justin-southworth.campus.tayloru.edu
}

function cd(){
## Set 'cd' to automatically run 'ls'
    if [ $# -eq 0 ]; then
        builtin cd ~
    else
        builtin cd "$*"
    fi
    RESULT=$?
    # Junky
    if [ $RESULT -eq 0 ]; then
        export PS1='\n\[$RESET$CYAN\][\d > \t] \[$RED$BOLD\][\w] \[$BOLD$GREEN\]$(git_prompt)\[$RESET$MAGENTA\][command: \#] \[$YELLOW\][jobs: \j] \[$GREEN\][\u@\h]
\[$RESET\]\[$GREEN\]\[$BLINK\]::: \[$RESET\]'
        ls -GFh
    else
        export PS1='\n\[$RESET$CYAN\][\d > \t] \[$RED$BOLD\][\w] \[$BOLD$GREEN\]$(git_prompt)\[$RESET$MAGENTA\][command: \#] \[$YELLOW\][jobs: \j] \[$GREEN\][\u@\h]
\[$RESET\]\[$RED\]\[$BLINK\]::: \[$RESET\]'
    fi
}

git_prompt () {
## Outputs git branch if in a repo
    if ! git rev-parse --git-dir > /dev/null 2>&1; then
        return 0
    fi

    git_branch=$(git branch 2>/dev/null| sed -n '/^\*/s/^\* //p')

    echo "[$git_branch] "
}

DEFAULT=$(tput setaf 9)
BLACK=$(tput setaf 0)
RED=$(tput setaf 1)
GREEN=$(tput setaf 2)
YELLOW=$(tput setaf 3)
BLUE=$(tput setaf 4)
MAGENTA=$(tput setaf 5)
CYAN=$(tput setaf 6)
WHITE=$(tput setaf 7)

# DIM doesn't seem to work. Just reset.
DIM=$(tput dim)
BOLD=$(tput bold)
RESET=$(tput sgr0)
START_UNDER=$(tput smul)
END_UNDER=$(tput rmul)
# reverses fg and bg
REV=$(tput rev)
BLINK=$(tput blink)

# TODO: Fix the hackiness. Also, only make jobs show up if > 1?
export PS1='\n\[$RESET$CYAN\][\d > \t] \[$RED$BOLD\][\w] \[$BOLD$GREEN\]$(git_prompt)\[$RESET$MAGENTA\][command: \#] \[$YELLOW\][jobs: \j] \[$GREEN\][\u@\h]
\[$RESET\]\[$(es=$?;if [ $es -eq 0 ]; then echo $GREEN; else echo $RED;fi)\]\[$BOLD$BLINK\]::: \[$RESET\]'

# check the window size after each command and, if necessary,
# update the values of LINES and COLUMNS.
shopt -s checkwinsize

# make less more friendly for non-text input files, see lesspipe(1)
[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"

force_color_prompt=yes

# Force 256 color terminal
export TERM=xterm-256color

alias s='senior'
function senior()
{
    if [ $# -eq 0 ]; then
        cd ~/Documents/School/Senior
    else
        cd ~/Documents/School/Senior/*$1*
    fi
}

alias p='payap'
function payap()
{
    cd ~/Documents/School/1 And Done/4 Senior/COS 333/payap/sil/january2015
}

# Add an "alert" alias for long running commands.  Use like so:
#   sleep 10; alert
alias alert='notify-send --urgency=low -i "$([ $? = 0 ] && echo terminal || echo error)" "$(history|tail -n1|sed -e '\''s/^\s*[0-9]\+\s*//;s/[;&|]\s*alert$//'\'')"'

alias i='interserve'
function interserve()
{
    if [ $# -eq 0 ]; then
        cd ~/Documents/Interserve/
    else
        cd ~/Documents/Interserve/*$1*
    fi
}

function fanspeed() {
## MANUALLY SET THE MINIMUM FAN SPEED
    if [ $# == 0 ]
    then
        # -f does Fahrenheit
        # sensors -f
        cat /sys/devices/platform/applesmc.768/fan1_min
    else
        if [ $1 -ge 2000 ]
        then
            echo "This will change the minimum fan speed to" $1 "RPM."
            echo $1 | sudo tee /sys/devices/platform/applesmc.768/fan1_min
        else
            echo "Must be at least 2000"
        fi
    fi
}

# Find rm
# find . -name "*.orig" -exec rm {} \;

